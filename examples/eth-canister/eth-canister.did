type ChainArgs = variant { Upgrade : record {}; Init : InitArgs };
type InitArgs = record { ecdsa_key_name : text };
type RPCAgent = record {
  proxy_token : opt text;
  api_token : opt text;
  endpoint : text;
  name : text;
  max_cycles : nat64;
};
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : text; Err : text };
type Result_2 = variant { Ok : State; Err };
type State = record {
  ecdsa_key_name : text;
  rpc_proxy_public_key : text;
  rpc_agents : vec RPCAgent;
};
service : (opt ChainArgs) -> {
  admin_set_agent : (vec RPCAgent) -> (Result);
  eth_chain_id : () -> (Result_1);
  get_best_block : () -> (Result_1);
  get_state : () -> (Result_2) query;
}
